services:
  app:
    build: .
    container_name: sockio_app
    environment:
      - UV_COMPILE_BYTECODE=1
      - UV_LINK_MODE=copy
    ports:
      - "80:3000"
      - "443:3000"
    volumes:
      - ./sockio/:/app/sockio/
    command: [ "uv", "run", "watchfiles","sockio.main.main" ]

  mongo:
    image: mongo:7.0
    container_name: sockio_mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=sockio_db
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - sockio_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongo-express:
    image: mongo-express:1.0.0
    container_name: sockio_mongo_express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password123
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - sockio_network
    restart: unless-stopped

networks:
  sockio_network:
    driver: bridge

volumes:
  mongo_data:
    driver: local
  mongo_config:
    driver: local