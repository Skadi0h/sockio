services:
  buypass:
    image: neilpang/acme.sh
    container_name: buypass_acme
    volumes:
      - cert_volume:/acme.sh
    ports:
      - "80:80"
    command: >
      --issue --standalone -d orro.chat --server https://api.buypass.com/acme/directory

  app:
    build: .
    container_name: socketify_app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_URL=postgresql+asyncpg://sockuser:sockpass@postgres/sockio
      - WS_HOST=orro.chat
      - WS_PORT=3000
      - WS_MAX_PAYLOAD=10485760
      - WS_IDLE_TIMEOUT=300
      - WS_ROOM_NAME=room
      - LOG_LEVEL=INFO
      - PEM_KEY_PATH=/acme.sh/orro.chat_ecc/orro.chat.key
      - PEM_CHAIN_PATH=/acme.sh/orro.chat_ecc/fullchain.cer
    ports:
      - "443:3000"
    restart: unless-stopped
    volumes:
      - ./sockio/:/app/sockio/
      - cert_volume:/acme.sh:ro
    networks:
      - sockio_network
    command: [ "uv", "run", "python", "-m", "sockio.main" ]

  postgres:
    image: postgres:16
    container_name: sockio_postgres
    environment:
      - POSTGRES_DB=sockio
      - POSTGRES_USER=sockuser
      - POSTGRES_PASSWORD=sockpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sockio_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "sockuser" ]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 20s

networks:
  sockio_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  cert_volume:
    driver: local
