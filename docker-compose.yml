version: "3.8"

services:
  buypass:
    image: neilpang/acme.sh
    container_name: buypass_acme
    volumes:
      - cert_volume:/acme.sh
    ports:
      - "80:80"
    command: >
      --issue --standalone --server https://api.buypass.com/acme/directory -d orro.chat

  app:
    build: .
    container_name: socketify_app
    depends_on:
      buypass:
        condition: service_completed_successfully
      mongo:
        condition: service_healthy
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongo:27017
      - MONGODB_DATABASE=sockio_db
      - WS_HOST=orro.chat
      - WS_PORT=3000
      - WS_MAX_PAYLOAD=10485760
      - WS_IDLE_TIMEOUT=300
      - WS_ROOM_NAME=room
      - LOG_LEVEL=INFO
      - PEM_KEY_PATH=/acme.sh/orro.chat/privkey.pem
      - PEM_CHAIN_PATH=/acme.sh/orro.chat/fullchain.pem
    ports:
      - "443:3000"
    volumes:
      - ./sockio/:/app/sockio/
      - cert_volume:/acme.sh:ro
    networks:
      - sockio_network
    command: [ "uv", "run", "python", "-m", "sockio.main" ]

  mongo:
    image: mongo:7.0
    container_name: sockio_mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=sockio_db
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - sockio_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  sockio_network:
    driver: bridge

volumes:
  mongo_data:
    driver: local
  mongo_config:
    driver: local
  cert_volume:
    driver: local
